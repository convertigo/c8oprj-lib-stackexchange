https: true
port: 443
server: api.stackexchange.com/${lib_stackexchange.api_version=2.3}
↓questions [transactions.JsonHttpTransaction]: 
  ↑default: true
  comment: Get all questions on the site.
  subDir: questions
  ↓key [variables.RequestableHttpVariable-1641200571171]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641200571174]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641200571177]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641200651355]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641200651358]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641200651361]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641200651364]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641200651367]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641200651370]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641200651373]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641200651376]: 
    httpName: sort
    value: activity
  ↓tagged [variables.RequestableHttpVariable-1641200651379]: 
    httpName: tagged
↓questions_add [transactions.JsonHttpTransaction]: 
  comment: Creates a new question. auth required
  httpVerb: POST
  subDir: questions/add
  ↓key [variables.RequestableHttpVariable-1641832976950]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641833089456]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641832976953]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641832976956]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓title [variables.RequestableHttpVariable-1641833075618]: 
    httpMethod: POST
    httpName: title
  ↓body [variables.RequestableHttpVariable-1641833075621]: 
    httpMethod: POST
    httpName: body
  ↓tags [variables.RequestableHttpVariable-1641833075624]: 
    httpMethod: POST
    httpName: tags
↓questions_answers_add_id [transactions.JsonHttpTransaction]: 
  comment: Creates an answer on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/answers/add
  ↓key [variables.RequestableHttpVariable-1641221768152]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830485771]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641221768155]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641221768158]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641221768161]: 
    httpMethod: POST
  ↓body [variables.RequestableHttpVariable-1641221768164]: 
    httpMethod: POST
    httpName: body
  ↓preview [variables.RequestableHttpVariable-1641221900135]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_answers_ids [transactions.JsonHttpTransaction]: 
  comment: Get the answers to the questions identified by a set of ids.
  subDir: questions/{ids}/answers
  ↓key [variables.RequestableHttpVariable-1641220998266]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641220998269]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641220998272]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641220998275]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641220998278]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641220998281]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641220998284]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641220998287]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641220998290]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641220998293]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641220998296]: 
    httpName: sort
    value: activity
  ↓ids [variables.RequestableHttpVariable-1641220998299]: 
↓questions_answers_render_id [transactions.JsonHttpTransaction]: 
  comment: Renders a hypothetical answer to a question.
  subDir: questions/{id}/answers/render
  ↓key [variables.RequestableHttpVariable-1641221318328]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641221318331]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641221318334]: 
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641221370741]: 
  ↓body [variables.RequestableHttpVariable-1641221588001]: 
    httpName: body
↓questions_by_ids [transactions.JsonHttpTransaction]: 
  comment: Get the questions identified by a set of ids.
  subDir: questions/{ids}
  ↓Test_Case [core.TestCase]: 
    ↓key [variables.TestCaseVariable-1641895069800]: 
      value: wc*zLMga8qgTXEidUCBeFw((
    ↓filter [variables.TestCaseVariable-1641895069802]: 
      value: '!nKzQUR3Egv'
    ↓site [variables.TestCaseVariable-1641895069804]: 
      value: stackoverflow
    ↓page [variables.TestCaseVariable-1641895069806]: 
    ↓pagesize [variables.TestCaseVariable-1641895069808]: 
    ↓fromdate [variables.TestCaseVariable-1641895069810]: 
    ↓todate [variables.TestCaseVariable-1641895069812]: 
    ↓order [variables.TestCaseVariable-1641895069814]: 
      value: desc
    ↓min [variables.TestCaseVariable-1641895069816]: 
    ↓max [variables.TestCaseVariable-1641895069818]: 
    ↓sort [variables.TestCaseVariable-1641895069820]: 
      value: activity
    ↓ids [variables.TestCaseVariable-1641895069822]: 
      value: 53747595
  ↓key [variables.RequestableHttpVariable-1641201320883]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641201320886]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641201320889]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641201320892]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641201320895]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641201320898]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641201320901]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641201320904]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641201320907]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641201320910]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641201320913]: 
    httpName: sort
    value: activity
  ↓ids [variables.RequestableHttpVariable-1641201320916]: 
↓questions_close_id [transactions.JsonHttpTransaction]: 
  comment: Returns valid flag options which are also close reasons for the given question. auth required
  subDir: questions/{id}/close/options
  ↓key [variables.RequestableHttpVariable-1641221977689]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830782326]: 
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641221977692]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641221977695]: 
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641221977698]: 
↓questions_comments_ids [transactions.JsonHttpTransaction]: 
  comment: Get the comments on the questions identified by a set of ids.
  subDir: questions/{ids}/comments
  ↓key [variables.RequestableHttpVariable-1641221650497]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641221650500]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641221650503]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641221650506]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641221650509]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641221650512]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641221650515]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641221650518]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641221650521]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641221650524]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641221650527]: 
    httpName: sort
    value: creation
  ↓ids [variables.RequestableHttpVariable-1641221650530]: 
↓questions_delete_id [transactions.JsonHttpTransaction]: 
  comment: Deletes the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/delete
  ↓key [variables.RequestableHttpVariable-1641222075394]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830802038]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222075397]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222075400]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222075403]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222122775]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_downvote_id [transactions.JsonHttpTransaction]: 
  comment: Casts a downvote on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/downvote
  ↓key [variables.RequestableHttpVariable-1641222209475]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830819507]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222209478]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222209481]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222209484]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222262574]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_downvote_undo_id [transactions.JsonHttpTransaction]: 
  comment: Undoes a downvote on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/downvote/undo
  ↓key [variables.RequestableHttpVariable-1641222284991]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830832344]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222284994]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222284997]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222285000]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222285006]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_edit_id [transactions.JsonHttpTransaction]: 
  comment: Edits the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/edit
  ↓key [variables.RequestableHttpVariable-1641222625032]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830863479]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222625035]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222625038]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222625041]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222625047]: 
    httpMethod: POST
    httpName: preview
    value: true
  ↓title [variables.RequestableHttpVariable-1641222732604]: 
    httpMethod: POST
    httpName: title
  ↓body [variables.RequestableHttpVariable-1641222741509]: 
    httpMethod: POST
    httpName: body
  ↓tags [variables.RequestableHttpVariable-1641222749312]: 
    httpMethod: POST
    httpName: tags
  ↓comment [variables.RequestableHttpVariable-1641222762627]: 
    httpMethod: POST
    httpName: comment
↓questions_favorite_id [transactions.JsonHttpTransaction]: 
  comment: Bookmarks the given question. (Previously known as "favoriting" a question) auth required
  httpVerb: POST
  subDir: questions/{id}/favorite
  ↓key [variables.RequestableHttpVariable-1641222836907]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830878034]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222836910]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222836913]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222836916]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222836922]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_favorite_undo_id [transactions.JsonHttpTransaction]: 
  comment: Undoes bookmarking the given question. (Previously known as "favoriting" a question) auth required
  httpVerb: POST
  subDir: questions/{id}/favorite/undo
  ↓key [variables.RequestableHttpVariable-1641222896184]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830886784]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641222896187]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641222896190]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641222896193]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641222896199]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_featured [transactions.JsonHttpTransaction]: 
  comment: Get all questions on the site with active bounties.
  subDir: questions/featured
  ↓key [variables.RequestableHttpVariable-1641833176472]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641833176475]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641833176478]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641833176481]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641833176484]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641833176487]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641833176490]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641833176493]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641833176496]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641833176499]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641833176502]: 
    httpName: sort
    value: activity
  ↓tagged [variables.RequestableHttpVariable-1641833176505]: 
    httpName: tagged
↓questions_flags_add_id [transactions.JsonHttpTransaction]: 
  comment: Casts a flag on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/flags/add
  ↓key [variables.RequestableHttpVariable-1641830965188]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641830965191]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641830965194]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓id [variables.RequestableHttpVariable-1641830965200]: 
    httpMethod: POST
  ↓option_id [variables.RequestableHttpVariable-1641831106616]: 
    httpMethod: POST
    httpName: option_id
  ↓comment [variables.RequestableHttpVariable-1641831251175]: 
    httpMethod: POST
    httpName: comment
  ↓target_site [variables.RequestableHttpVariable-1641831263287]: 
    httpMethod: POST
    httpName: target_site
  ↓question_id [variables.RequestableHttpVariable-1641831274090]: 
    httpMethod: POST
    httpName: question_id
  ↓preview [variables.RequestableHttpVariable-1641830965203]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_flags_options_id [transactions.JsonHttpTransaction]: 
  comment: Returns valid flag options for the given question. auth required
  subDir: questions/{id}/flags/options
  ↓key [variables.RequestableHttpVariable-1641831574266]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641831574269]: 
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641831574272]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641831658769]: 
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641831574275]: 
↓questions_linked_ids [transactions.JsonHttpTransaction]: 
  comment: Get the questions that link to the questions identified by a set of ids.
  subDir: questions/{ids}/linked
  ↓key [variables.RequestableHttpVariable-1641831708497]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641831708500]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641831708503]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641831708506]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641831708509]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641831708512]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641831708515]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641831708518]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641831708521]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641831708524]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641831708527]: 
    httpName: sort
    value: activity
  ↓ids [variables.RequestableHttpVariable-1641831784577]: 
↓questions_no_answers [transactions.JsonHttpTransaction]: 
  comment: Get all questions on the site with no answers.
  subDir: questions/no-answers
  ↓key [variables.RequestableHttpVariable-1641833259348]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641833259351]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641833259354]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641833259357]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641833259360]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641833259363]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641833259366]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641833259369]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641833259372]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641833259375]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641833259378]: 
    httpName: sort
    value: activity
  ↓tagged [variables.RequestableHttpVariable-1641833259381]: 
    httpName: tagged
↓questions_related_ids [transactions.JsonHttpTransaction]: 
  comment: Get the questions that are related to the questions identified by a set of ids.
  subDir: questions/{ids}/related
  ↓key [variables.RequestableHttpVariable-1641831832054]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641831832057]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641831832060]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641831832063]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641831832066]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641831832069]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641831832072]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641831832075]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641831832078]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641831832081]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641831832084]: 
    httpName: sort
    value: activity
  ↓ids [variables.RequestableHttpVariable-1641831832087]: 
↓questions_render [transactions.JsonHttpTransaction]: 
  comment: Renders a hypothetical question. auth required
  httpVerb: POST
  subDir: questions/render
  ↓key [variables.RequestableHttpVariable-1641833349417]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641833349420]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641833349423]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641833349426]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓title [variables.RequestableHttpVariable-1641833349429]: 
    httpMethod: POST
    httpName: title
  ↓body [variables.RequestableHttpVariable-1641833349432]: 
    httpMethod: POST
    httpName: body
  ↓tags [variables.RequestableHttpVariable-1641833349435]: 
    httpMethod: POST
    httpName: tags
↓questions_suggested_edit_add_id [transactions.JsonHttpTransaction]: 
  comment: Creates a suggested_edit on an existing question. auth required
  httpVerb: POST
  subDir: questions/{id}/suggested-edit/add
  ↓key [variables.RequestableHttpVariable-1641831908015]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641831908018]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641831908021]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓id [variables.RequestableHttpVariable-1641831908024]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641831908039]: 
    httpMethod: POST
    httpName: preview
    value: true
  ↓title [variables.RequestableHttpVariable-1641832132643]: 
    httpMethod: POST
    httpName: title
  ↓body [variables.RequestableHttpVariable-1641832142013]: 
    httpMethod: POST
    httpName: body
  ↓tags [variables.RequestableHttpVariable-1641832150908]: 
    httpMethod: POST
    httpName: tags
  ↓comment [variables.RequestableHttpVariable-1641832160028]: 
    httpMethod: POST
    httpName: comment
↓questions_timeline_ids [transactions.JsonHttpTransaction]: 
  comment: Get the timelines of the questions identified by a set of ids.
  subDir: questions/{ids}/timeline
  ↓key [variables.RequestableHttpVariable-1641832207027]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641832207030]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641832207033]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641832207036]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641832207039]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641832207042]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641832207045]: 
    httpName: todate
  ↓ids [variables.RequestableHttpVariable-1641832256849]: 
↓questions_unanswered [transactions.JsonHttpTransaction]: 
  comment: Get all questions the site considers unanswered.
  subDir: questions/unanswered
  ↓key [variables.RequestableHttpVariable-1641834845056]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓filter [variables.RequestableHttpVariable-1641834845059]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641834845062]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641834845065]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641834845068]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641834845071]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641834845074]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641834845077]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641834845080]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641834845083]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641834845086]: 
    httpName: sort
    value: activity
  ↓tagged [variables.RequestableHttpVariable-1641834845089]: 
    httpName: tagged
↓questions_unanswered_my_tags [transactions.JsonHttpTransaction]: 
  comment: Get questions the site considers unanswered within a user's favorite or interesting tags. auth required
  subDir: questions/unanswered/my-tags
  ↓key [variables.RequestableHttpVariable-1641834911715]: 
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641835040779]: 
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641834911718]: 
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641834911721]: 
    httpName: site
    value: stackoverflow
  ↓page [variables.RequestableHttpVariable-1641834911724]: 
    httpName: page
  ↓pagesize [variables.RequestableHttpVariable-1641834911727]: 
    httpName: pagesize
  ↓fromdate [variables.RequestableHttpVariable-1641834911730]: 
    httpName: fromdate
  ↓todate [variables.RequestableHttpVariable-1641834911733]: 
    httpName: todate
  ↓order [variables.RequestableHttpVariable-1641834911736]: 
    httpName: order
    value: desc
  ↓min [variables.RequestableHttpVariable-1641834911739]: 
    httpName: min
  ↓max [variables.RequestableHttpVariable-1641834911742]: 
    httpName: max
  ↓sort [variables.RequestableHttpVariable-1641834911745]: 
    httpName: sort
    value: activity
↓questions_upvote_id [transactions.JsonHttpTransaction]: 
  comment: Casts an upvote on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/upvote
  ↓key [variables.RequestableHttpVariable-1641832328329]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641832328332]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641832328335]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641832328338]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641832328341]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641832328344]: 
    httpMethod: POST
    httpName: preview
    value: true
↓questions_upvote_undo_id [transactions.JsonHttpTransaction]: 
  comment: Undoes an upvote on the given question. auth required
  httpVerb: POST
  subDir: questions/{id}/upvote/undo
  ↓key [variables.RequestableHttpVariable-1641832328348]: 
    httpMethod: POST
    httpName: key
    value: ${lib_stackexchange.key}
  ↓access_token [variables.RequestableHttpVariable-1641832328351]: 
    httpMethod: POST
    httpName: access_token
    value: 
      - ↑ciphered: true
      - ↑traceable: false
      - →→: xdf426205cb83a225ee6a11b210de9d10331b00f7e4e1083d51264ffa9d08a5c7006585f6a4e2be0e7fafe915ba3beee3
    visibility: '-1'
  ↓filter [variables.RequestableHttpVariable-1641832328354]: 
    httpMethod: POST
    httpName: filter
    value: default
  ↓site [variables.RequestableHttpVariable-1641832328357]: 
    httpMethod: POST
    httpName: site
    value: stackoverflow
  ↓id [variables.RequestableHttpVariable-1641832328360]: 
    httpMethod: POST
  ↓preview [variables.RequestableHttpVariable-1641832328363]: 
    httpMethod: POST
    httpName: preview
    value: true